version: "3.7"

services:
  service-postgres:
    image: postgres:15.1
    container_name: ${DB_ENGINE_HOST:?env var cannot be unset or empty}
    volumes:
      - volume-shopping-list-postgres:/var/lib/postgresql/data
    # command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      # - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - POSTGRES_DB=${POSTGRES_DB:?env var cannot be unset or empty}
      - POSTGRES_USER=${POSTGRES_USER:?env var cannot be unset or empty}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?env var cannot be unset or empty}
  
  service-web-application:
    build:
      context: .
      dockerfile: Containerfile
      # target: build-stage
    image: image-shopping-list:2024-05-01-19-32
    container_name: container-shopping-list
    depends_on:
      - service-postgres
    environment:
      - SECRET_KEY=${SECRET_KEY:?env var cannot be unset or empty}
      # - DATABASE_TYPE=${DB_ENGINE_TYPE:?env var cannot be unset or empty}
      - DB_ENGINE_HOST=${DB_ENGINE_HOST:?env var cannot be unset or empty}
      - DB_ENGINE_PORT=${DB_ENGINE_PORT:?env var cannot be unset or empty}
      - POSTGRES_DB=${POSTGRES_DB:?env var cannot be unset or empty}
      - POSTGRES_USER=${POSTGRES_USER:?env var cannot be unset or empty}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?env var cannot be unset or empty}
    # command: 
    #   ["./scripts/apply-db-migrations.sh"]
    expose:
      - "5000"
    ports:
      - "5000:5000"

volumes:
  volume-shopping-list-postgres:
